name: CI Routine Check üéÆ

on:
#  - push
#  - pull_request
  workflow_dispatch: { }

env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  Run-Tests:
    name: ${{ matrix.testMode }} Tests
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        testMode:
          - PlayMode
          - EditMode
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache library
        uses: actions/cache@v2
        with:
            path: Library
            key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
            restore-keys: |
              Library-
      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v2
        with:
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Tests Result
      - name: Upload results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.testMode }} Tests Result
          path: ${{ steps.tests.outputs.artifactsPath }}

  buildWindows:
    needs: Run-Tests
    name: Build for Windows üñ•Ô∏è
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64
      - uses: actions/upload-artifact@v2
        with:
          name: build-StandaloneWindows64
          path: build/StandaloneWindows64